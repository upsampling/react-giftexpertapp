{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GidGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GidGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBAGFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAIV,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAjBU,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,+BCPdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAcbM,GAda,4CAAH,sDCCZO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EAEXZ,mBAAS,CAC/BmB,KAAK,GACLa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBrC,OAbAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAGGqB,EDbwBM,CAAa3B,GAAhCa,EANuB,EAM5BN,KAAaa,EANe,EAMfA,QAGpB,OACI,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aErBtBiB,EAAgB,WAAO,IAAD,EAGKxC,mBAAS,CAAC,cAHf,mBAGxByC,EAHwB,KAGZ1C,EAHY,KAM/B,OACI,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAES0C,EAAWpB,KAAI,SAAAT,GAAQ,OAGnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADHA,Y,MCfnC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5477f583.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        // setCategories([e.target.value]);\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />            \r\n            </form>  \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n    export const getGifts = async( category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=mZ0nxYDWUuRYLuRdp4aikXgjXP5FnSxm`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        \r\n        \r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GidGridItem = ( {id, title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}  />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifts } from '../helpers/getGifs';\r\nimport { GidGridItem } from './GidGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            {loading && <p>loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GidGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />   \r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }); \r\n                }, 3000);\r\n            });\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <>\r\n           <h2>GiftExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr />\r\n\r\n            \r\n\r\n           <ol>\r\n                {\r\n                    categories.map(category =>\r\n\r\n                        // <li key={category}> { category } </li>\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n           </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vital\n\n//Gift ExpertApp\n\n\n\n\n\n\n\n"],"sourceRoot":""}